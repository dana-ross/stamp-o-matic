{
  "name": "downloadjs",
  "main": "download.js",
  "version": "1.4.2",
  "description": "file downloading using client-side javascript",
  "keywords": [
    "files",
    "dataURL",
    "blob",
    "download"
  ],
  "homepage": "http://danml.com/download.html",
  "license": "CC-BY-4.0",
  "author": {
    "name": "dandavis",
    "email": "rndme@users.noreply.github.com",
    "url": "http://danml.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rndme/download.git"
  },
  "bugs": {
    "email": "rndme@users.noreply.github.com"
  },
  "files": [
    "download.js",
    "download.min.js"
  ],
  "npmName": "downloadjs",
  "npmFileMap": [
    {
      "basePath": "/",
      "files": [
        "*.js"
      ]
    }
  ],
  "gitHead": "fc870dfa7bc854a4a36bad3fc1803b5b4adf6c1e",
  "readme": "download\n========\n\nSummary\n---------\nThe download() function is used to trigger a file download from JavaScript. \n\nIt specifies the contents and name of a new file placed in the browser's download directory. The input can be a URL, String, Blob, or Typed Array of data, or via a dataURL representing the file's data as base64 or url-encoded string. No matter the input format, download() saves a file using the specified file name and mime information in the same manner as a server using a Content-Disposition HTTP header.\n\nSyntax\n---------\n\n#### Via NPM/Bower \n`npm install downloadjs`  \n`bower install downloadjs`\n\n`require(\"downloadjs\")(data, strFileName, strMimeType);`\n\n#### Simple global `download` function via `<script>` include\n    download(data, strFileName, strMimeType);\n\n#### Included via AMD\n    require(['path/to/file'], function(download) {\n        download(data, strFileName, strMimeType);\n    });\n\n\nParameters\n---------\n* **data** - The Blob, File, String, or dataURL containing the soon-to-be File's contents.\n* **strFileName** - The name of the file to be created. Note that older browsers (like FF3.5, Ch5) don't honor the file name you provide, instead they automatically name the downloaded file.\n* **strMimeType** - The MIME content-type of the file to download. While optional, it helps the browser present friendlier information about the download to the user, encouraging them to accept the download.\n\n\n\nExample Usage\n---------\n\n\n### Plain Text\n#### text string  -  [live demo](http://pagedemos.com/sxks39b72aqb/1)\n    download(\"hello world\", \"dlText.txt\", \"text/plain\");\n\n#### text dataURL  -  [live demo](http://pagedemos.com/sxks39b72aqb/2)\n    download(\"data:text/plain,hello%20world\", \"dlDataUrlText.txt\", \"text/plain\");\n\n#### text blob  -  [live demo](http://pagedemos.com/sxks39b72aqb/3)\n    download(new Blob([\"hello world\"]), \"dlTextBlob.txt\", \"text/plain\");\n\n#### text url - [live demo](http://pagedemos.com/pz6hkyqutjtw/)\n    download(\"/robots.txt\");\n\n\n#### text UInt8 Array -  [live demo](http://pagedemos.com/sxks39b72aqb/4)\n    var str= \"hello world\",\tarr= new Uint8Array(str.length);\n    str.split(\"\").forEach(function(a,b){\n   \t  arr[b]=a.charCodeAt();\n    });\n\n    download( arr, \"textUInt8Array.txt\", \"text/plain\" );\n\n### HTML\n#### html string -  [live demo](http://pagedemos.com/sxks39b72aqb/5)\n    download(document.body.outerHTML, \"dlHTML.html\", \"text/html\");\n\n#### html Blob -  [live demo](http://pagedemos.com/sxks39b72aqb/6)\n    download(new Blob([\"hello world\".bold()]), \"dlHtmlBlob.html\", \"text/html\");\n\n#### ajax callback -  [live demo](http://pagedemos.com/sxks39b72aqb/7)\n(note that callback mode won't work on vanilla ajax or with binary files)\n   \n    $.ajax({\n    \t\turl: \"/download.html\",\n    \t\tsuccess: download.bind(true, \"text/html\", \"dlAjaxCallback.html\")\n    });\n\n\n### Binary Files\n#### image from URL  -  [live demo](http://pagedemos.com/yvvmxbjrwq7u/)\n    download(\"/diff6.png\");\n\n#### Image via ajax for custom filename - [live demo](http://pagedemos.com/v2848zfgwrju/)\n\tvar x=new XMLHttpRequest();\n\tx.open( \"GET\", \"/diff6.png\" , true);\n\tx.responseType=\"blob\";\n\tx.onload= function(e){download(e.target.response, \"awesomesauce.png\", \"image/png\");};\n\tx.send();\n\n\nCompatibility\n---------\ndownload.js works with a wide range of devices and browsers.\n\nYou can expect it to work for the vast majority of your users, with some common-sense limits:\n\n* Devices without file systems like iPhone, iPad, Wii, et al. have nowhere to save the file to, sorry.\n* Android support starts at 4.2 for the built-in browser, though chrome 36+ and firefox 20+ on android 2.3+ work well.\n* Devices without Blob support won't be able to download Blobs or TypedArrays\n* Legacy devices (no a[download]) support can only download a few hundred kilobytes of data, and can't give the file a custom name.\n* Devices without window.URL support can only download a couple megabytes of data\n* IE versions of 9 and before are NOT supported because the don't support a[download] or dataURL frame locations.\n\n\nFAQ\n---------\n\n * `Can I tell when a download is done/canceled?` No.\n * `How can I style the temporary download link?` Define CSS class styles for `.download-js-link`.\n * `What's up with Safari?` I don't know either but pull requests that improve the situation are welcome.\n * `Why is my binary file corrupted?` Likely: an incorrect MIME or using jQuery ajax, which has no bin support.\n * `How big of files work?` Depends, try yourself: [File Echo Demo](http://pagedemos.com/gqs6hbmjcpem/)... I do a 1GB dl routinely on a thinkpad...\n\n\nChange Log (v4.1)\n---------\n* 2008 :: landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n* 2012 :: added named files via a[download], msSaveBlob() for IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n* 2014 :: added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support\n* 2015 :: converted to amd/commonJS module with browser-friendly fallback\n* 2015 :: 4.1 added direct URL downloading via a single URL argument.\n* 20XX :: ???? Considering Zip, Tar, and other multi-file outputs, Blob.prototype.download option, and more, stay tuned folks.\n",
  "readmeFilename": "README.md",
  "_id": "downloadjs@1.4.2",
  "_shasum": "821eceafea110b77fc99178f3b4cbf427e13fc85",
  "_from": "../../../../var/folders/mb/dm8hqj2d2nxb6br9ps21z3zw0000gn/T/npm-46167-1bd16d00/1454993264963-0.7682929439470172/fc870dfa7bc854a4a36bad3fc1803b5b4adf6c1e",
  "_resolved": "git+https://github.com/rndme/download#fc870dfa7bc854a4a36bad3fc1803b5b4adf6c1e"
}
